openapi: 3.0.0
info:
  version: 0.0.1
  title: 'Finkita service swagger docs'
  description: 'Service to manage financial tracking data'
servers:
  - description: Local development
    url: 'http://localhost:8080'
paths:
  /healthcheck/liveness:
    get:
      tags:
        - healthcheck
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Healthcheck'
  /api/v1/accounts:
    get:
      tags:
        - account
      operationId: getAccounts
      responses:
        200:
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      tags:
        - account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        201:
          description: Created account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /api/v1/accounts/{id}:
    get:
      tags:
        - account
      operationId: getAccontById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 10
      responses:
        200:
          description: An account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas'
    patch:
      tags:
        - account
      operationId: updateAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '10'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
      responses:
        201:
          description: Updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

    delete:
      tags:
        - account
      operationId: deleteAccountByID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '10'
      responses:
        200:
          description: deleted account
          content:
            application/json:
              schema:
                # TODO: define schema for deleted account response
                $ref: '#/components/schemas/Account'

  /api/v1/mutations:
    get:
      tags:
        - mutation
      operationId: getMutations
      responses:
        200:
          description: A list of mutations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'

  /api/v1/mutations/{id}:
    get:
      tags:
        - mutation
      operationId: getMutationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 10
      responses:
        200:
          description: A mutation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          description: Mutation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas'

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          example: 'c0ca3887-a375-4cf3-bb40-ef93c40254ef'
        email:
          type: string
          example: '13'
        bank:
          type: string
          example: 'Bender B. Rodriguez'
        account_number:
          type: string
          example: 'Bending Unit'
    AccountRequest:
      type: object
      required:
        - email
        - bank
        - account_number
        - password
      properties:
        email:
          type: string
          example: 'aryuuu@example.com'
        bank:
          type: string
          example: BNI
        account_number:
          type: string
          example: '1337'
        password:
          type: string
          example: 'str0ngp4ssw0rdzz'
    AccountUpdateRequest:
      type: object
      properties:
        email:
          type: string
          example: 'aryuuu@example.com'
        bank:
          type: string
          example: BNI
        account_number:
          type: string
          example: '1337'
        password:
          type: string
          example: 'str0ngp4ssw0rdzz'
    Mutation:
      type: object
      properties:
        id:
          type: string
          example: 'c0ca3887-a375-4cf3-bb40-ef93c40254ef'
        account_id:
          type: string
          example: 'c0ca3887-a375-4cf3-bb40-ef93c40254ef'
        email:
          type: string
          example: '13'
        date:
          type: string
        description:
          type: string
          example: 'Twitch donation'
        type:
          type: string
          example: 'debit'
        amount:
          type: number
          example: 1000
        balance:
          type: number
          example: 10000
    Healthcheck:
      type: object
      properties:
        status:
          type: string
          example: 'OK'
        dependencies:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: 'postgresql'
              status:
                type: string
                example: 'OK'
  parameters:
    apiKey:
      in: header
      name: api-key
      description: 'API Key'
      schema:
        type: string
        example: 'dummyapikeyultrasecret'
      required: true
